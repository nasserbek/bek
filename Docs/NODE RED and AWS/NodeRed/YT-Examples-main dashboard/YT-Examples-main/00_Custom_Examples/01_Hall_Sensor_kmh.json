[{"id":"cd9e0554.558c28","type":"group","z":"7bad5e70.f03c38","name":"Hall Sensor Pulses to km/h","style":{"label":true},"nodes":["718cb401.30f8bc","86ffe0e9.cc305","e31a7ab7.bc1c8"],"x":14,"y":2319,"w":892,"h":82},{"id":"718cb401.30f8bc","type":"inject","z":"7bad5e70.f03c38","g":"cd9e0554.558c28","name":"Hall Sensor Input Pulses","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":2360,"wires":[["86ffe0e9.cc305"]]},{"id":"86ffe0e9.cc305","type":"function","z":"7bad5e70.f03c38","g":"cd9e0554.558c28","name":"Calculate km/h from Sensor Pulses","func":"// get current time and previously saved Time\nvar currTimestamp = new Date(msg.payload)\nvar prevTimestamp = new Date(flow.get(\"prevTimestamp\")) || Date.now()\n\n// Save current Time in prevTimestamp flow Variable\nflow.set(\"prevTimestamp\", currTimestamp)\n\n// calculate the difference between the timestamps -> time per Revolution\nvar diff = (currTimestamp.getTime() - prevTimestamp.getTime()) / 1000\n\n// calculate the revolutions per second\n// 1 second divided by the time it takes to do one revolution, multiplied by 1 revolution -> rule of three\nvar revolutionsPerSecond = 1/diff*1\n\n// get rpm from revolutionsPerSecond\nvar revolutionsPerMinute = revolutionsPerSecond * 60\n\n// Calculate the km/h based on the revolutions per minute and the radius of the wheel in meters\nvar radiusMM = 50\nvar velocity = (3/25) * Math.PI * (radiusMM / 1000) * revolutionsPerMinute\n\n// Set payload to velocity in km/h\nmsg.payload = velocity\n\n// return msg Object\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":500,"y":2360,"wires":[["e31a7ab7.bc1c8"]]},{"id":"e31a7ab7.bc1c8","type":"debug","z":"7bad5e70.f03c38","g":"cd9e0554.558c28","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":790,"y":2360,"wires":[]}]
