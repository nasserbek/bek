
	
	
	

Fixed IP:
ifconfig to check the actual wlan0 or eth0 IP
sudo route -n to check gateway  for freebox 192.168.1.254
sudo nano /etc/dhcpcd.conf

interface wlan0
static ip_address=192.168.1.46
static routers=192.168.1.254
static domain_name_servers=8.8.8.8.8.8.44

interface eth0
static ip_address=192.168.1.183
static routers=192.168.1.1
static domain_name_servers=8.8.8.8.8.8.44

Main
mnjUdg63gkJ0Rl7Pbfw2qb9aGkI35wPJ
Spare
cfefMEczv_cZVHomzDd4uCbY5CRL8X5m

Arduino:
Download arduino-1.8.19from web ARM 32 bit linuc
cd~
ls
cd Downloads
ls
tar -xf arduino-1.8.19-linuxarm.tar.xz  
sudo mv arduino-1.8.19 /opt
ls /opt
sudo /opt/arduino-1.8.19/install.sh

https://dl.espressif.com/dl/package_esp32_index.json


Blynk Server:
sudo apt update
sudo apt install openjdk-8-jdk openjdk-8-jre
java -version
//wget “https://github.com/blynkkk/blynk-server/releases/download/v0.41.13/server-0.41.13-java8.jar”
wget "https://github.com/blynkkk/blynk-server/releases/download/v0.41.16/server-0.41.16-java8.jar"
Manual Start
java -jar server-0.41.16-java8.jar -dataFolder /home/pi/Blynk

Auto start
crontab -e
no crontab for pi – using an empty one

Select an editor. To change later, run ‘select-editor’.
1. /bin/ed
2. /bin/nano <—- easiest
3. /usr/bin/vim.tiny

Choose nano

Once you open the editor as shown below, Add the below line at the bottom of the editor and save it. Reboot the raspberry pi to check.

@reboot java -jar server-0.41.16-java8.jar -dataFolder /home/pi/Blynk &
//@reboot java -jar server-0.41.13-java8.jar -dataFolder /home/pi/Blynk &


Your Admin login email is admin@blynk.cc
Your Admin password is CLjSNvsDKlHNysfGwpXN8ahj  admin



Boot from SDD:Only on PI4
sudo apt update
sudo apt full-upgrade
sudo rpi-update
reboot


sudo rpi-eeprom-update -d -a

Copy SD in USD
sudo raspi-config
boot loader version E1
No

Then Boot Order
USB



Uninstal program:
sudo dpkg --list
sudo apt-get --purge remove arduinoxxxxxx







GITHUB:
Part 1: Setting it up first time:
-Install git		(Bits you need to type are colour in red. Don’t include “ ”)
sudo apt-get install git  (it may already be installed)
git config --global user.name nasserbek
git config --global user.email nasserbek@yahoo.it


-Make a folder that will sync up with github. Maybe name it after your group.
mkdir bek
   eg. mkdir bek


-Open that folder (change the directory “cd” to the new folder)
cd bek
  eg. cd bek

-Add invisible git files to the folder so that GitHub can link to it
git init
-Tell your Pi where where to find your group’s repository online. Find the address of the git by opening it on github and clicking “Clone or download”. In yellow.
git remote add origin https://github.com/nasserbek/bek.git
   eg. git remote add origin https://github.com/nasserbek/bek.git
Part 2: Everyday use (pushing and pulling)
How to move files from Github->Pi
-Pull down the latest copy of the your files from Github onto your Raspberry Pi:
git pull origin master

How to move files from Pi->Github
-Add files to prepare a commit (a save)
git add .


-Commit changes with a -message. Do include the “” marks.
git commit -m "my message to explain the change"
eg. git commit -m "fixed a bug with elif, else"

-Push your changes up to the master branch on Github.
git push origin master
-You’ll be asked for your username and password to be sure that you have access to change the online repository.
-BONUS: You don’t have to use the master branch. All of the above can be done with your own branches. 




git pull origin master


token
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



Important Note : To store the token git credential so that you don't have to type token everytime, use this command before pushing.

git config credential.helper store

git add .
git commit -m "Version Pi nr0"

git push origin master   
nasserbek
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

sudo nano push

#!/bin/bash
# GitHub sync this is a comment
cd bek
git add .
git commit -m "Version Pi nr0"
git push origin master 

chmod u+x push
./push